# Copyright 2018 The Outline Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

def configure_debug_environment(platform)
  if platform == :ios or platform == :osx
    automatic_code_signing(use_automatic_signing: true, team_id: "QT8Z3Q9V3A",
                          code_sign_identity: "iPhone Developer")
  end
end

def configure_release_environment(platform)
  if platform == :ios
    # Retrieve signing credentials and provisioning profiles.
    match(type: "appstore", readonly: true,
          app_identifier: ["org.outline.ios.client", "org.outline.ios.client.VpnExtension"])

    disable_automatic_code_signing(path: "Outline.xcodeproj")
    update_project_provisioning(
        xcodeproj: "Outline.xcodeproj",
        profile: ENV["sigh_org.outline.ios.client_appstore_profile-path"],
        target_filter: ".*Outline.*",
        build_configuration: "Release")
    update_project_provisioning(
        xcodeproj: "Outline.xcodeproj",
        profile: ENV["sigh_org.outline.ios.client.VpnExtension_appstore_profile-path"],
        target_filter: ".*VpnExtension.*",
        build_configuration: "Release")
  end
end

def build_outline(platform)
  if platform == :ios or platform == :osx
    build_app(scheme: "Outline", export_xcargs: "-allowProvisioningUpdates")
  end

  if platform == :android
    gradle
  end
end

platform :ios do
  lane :debug
    configure_debug_environment :ios
    build_outline :ios
  end

  lane :release do
    configure_release_environment :ios
    package
  end

  lane :publish do
    upload_to_app_store(skip_metadata: true, skip_screenshots: true)
  end
end

platform :osx do
  lane :debug do
    configure_debug_environment :osx
    build_outline :osx
  end

  lane :release do
    configure_release_environment :osx
    package
  end

  lane :publish do
    upload_to_app_store(skip_metadata: true, skip_screenshots: true,
                        platform: "osx", app_version: get_version_number)
  end
end

platform :android do
  lane :debug
    configure_debug_environment :android
    build_outline :android
  end

  lane :release do
    configure_release_environment :android
    package
  end

  lane :publish do 
    upload_to_play_store
  end
end